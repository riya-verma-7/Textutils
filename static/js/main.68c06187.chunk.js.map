{"version":3,"sources":["components/Navbar.js","components/Textform.js","components/Alert.js","App.js","index.js"],"names":["Navbar","props","className","mode","href","title","type","id","onClick","toggleMode","htmlFor","TextForm","useState","text","setText","style","color","heading","rows","value","onChange","event","console","log","target","backgroundColor","newText","toUpperCase","showAlert","toLowerCase","document","getElementById","select","navigator","clipboard","writeText","split","join","length","Alert","alert","role","word","lower","charAt","slice","capatalize","msg","App","setMode","setAlert","message","setTimeout","body","background","about","ReactDOM","render"],"mappings":"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","file":"static/js/main.68c06187.chunk.js","sourcesContent":["\r\nimport React from 'react';\r\n// import PropTypes from 'prop-types';\r\n// import { Link } from 'react-router-dom';\r\n\r\n\r\n\r\n\r\nexport default function Navbar(props){\r\n    return (\r\n        <>\r\n           <nav className={`navbar navbar-expand-lg navbar-${props.mode} bg-${props.mode}`}>\r\n  <div className=\"container-fluid\">\r\n    {/* <Link className=\"navbar-brand\" to=\"/\">{props.title}</Link> */}\r\n    {/* eslint-disable-next-line */}\r\n    <a className=\"navbar-brand\" href=\"#\">{props.title}</a>\r\n    <button className=\"navbar-toggler\" type=\"button\" data-bs-toggle=\"collapse\" data-bs-target=\"#navbarSupportedContent\" aria-controls=\"navbarSupportedContent\" aria-expanded=\"false\" aria-label=\"Toggle navigation\">\r\n      <span className=\"navbar-toggler-icon\"></span>\r\n    </button>\r\n    <div className=\"collapse navbar-collapse\" id=\"navbarSupportedContent\">\r\n      <ul className=\"navbar-nav me-auto mb-2 mb-lg-0\">\r\n        <li className=\"nav-item\">\r\n          {/* <Link className=\"nav-link active\" aria-current=\"page\" to=\"/\">Home</Link> */}\r\n          \r\n           {/* eslint-disable-next-line */}\r\n          <a className=\"nav-link active\" aria-current=\"page\" href=\"#\">Home</a>\r\n        </li>\r\n        {/* <li className=\"nav-item\"> */}\r\n          {/* <Link className=\"nav-link\" to=\"/about\">{props.about}</Link> */}\r\n        {/* </li> */}\r\n      </ul>\r\n      {/* <form className=\"d-flex\">\r\n        <input className=\"form-control me-2\" type=\"search\" placeholder=\"Search\" aria-label=\"Search\"/>\r\n        < className=\"btn btn-outline-success\" type=\"submit\">Search</\r\n        button>\r\n      </form> */}\r\n      <div className={`form-check form-switch text-${props.mode===\"light\"?\"dark\":\"light\"}`}>\r\n  <input className=\"form-check-input \" onClick={props.toggleMode}type=\"checkbox\" id=\"flexSwitchCheckDefault\"/>\r\n  <label className=\"form-check-label\" htmlFor=\"flexSwitchCheckDefault\" > Enable Dark Mode </label>\r\n</div>\r\n    </div>\r\n  </div>\r\n</nav>\r\n        </>\r\n    )\r\n}\r\n// Navbar.propTypes={\r\n// title:propTypes.string.isRequired,\r\n// about:propTypes.string\r\n// }\r\n// Navbar.defaultProps={\r\n//     title:\"set title here\",\r\n//     about:\"About text here\"\r\n// }","\r\nimport React, { useState } from 'react';\r\n\r\nexport default function TextForm(props) {\r\n    const handleUpClick = () => {\r\n\r\n        let newText = text.toUpperCase();\r\n        setText(newText);\r\n        props.showAlert(\"Converted to Uppercase\",\"success\")\r\n    }\r\n    const handleLoClick = () => {\r\n        let newText = text.toLowerCase();\r\n        setText(newText);\r\n        props.showAlert(\"Converted to Lowercase\",\"success\")\r\n    }\r\n    const handleCopy = () => {\r\n        var text=document.getElementById(\"myBox\");\r\n        text.select();\r\n        navigator.clipboard.writeText(text.value);\r\n        props.showAlert(\"Copied to Clipboard\",\"success\")\r\n    }\r\n    const handleExtraSpaces = () => {\r\n      let newText=text.split(/[ ]+/);\r\n      setText(newText.join(\" \"))\r\n      props.showAlert(\"The extra spaces have been removed\",\"success\")\r\n    }\r\n    const handleClearText = () => {\r\n     let newText = \" \";\r\n     setText(newText);\r\n     props.showAlert(\"The text has been cleared \",\"success\")\r\n    }\r\n    const handleOnChange = (event) => {\r\n        console.log(\"On change \");\r\n        setText(event.target.value)\r\n        \r\n    }\r\n\r\n    // eslint-disable-next-line\r\n    const [text, setText] = useState(\"Enter text here\");\r\n    return ( <>\r\n        <div className = \"container\" style={{color:props.mode===\"dark\"?\"white\":\"black\"}}>\r\n\r\n        <h1> { props.heading } </h1> \r\n        <div className = \"mb-3\" >\r\n       <textarea className = \"form-control\"\r\n        id = \"myBox\"\r\n        rows = \"8\"\r\n        value = { text }\r\n        onChange = { handleOnChange } \r\n        style={{backgroundColor:props.mode===\"dark\"?\"grey\":\"white\",\r\n        color:props.mode===\"dark\"?\"white\":\"black\"}}>\r\n        </textarea> \r\n         </div> \r\n          <button className = \"btn btn-primary mx-1\"\r\n        onClick = { handleUpClick } > Convert To Uppercase </button> \r\n\r\n        <button className = \"btn btn-primary mx-1\"\r\n        onClick = { handleLoClick } > Convert To Lowercase </button> \r\n        <button className = \"btn btn-primary mx-1\"\r\n        onClick = { handleCopy} > Copy Text </button> \r\n        <button className = \"btn btn-primary mx-1\"\r\n        onClick = { handleExtraSpaces} > Remove extra Spaces </button> \r\n        <button className = \"btn btn-primary mx-1\"\r\n        onClick = { handleClearText} > Clear Text  </button> \r\n         </div>\r\n          <div className = \"container my-3\" style={{color:props.mode===\"dark\"?\"white\":\"black\"}}>\r\n        <h2 > Your Text summary </h2>\r\n         <p> { text.split(\" \").length }\r\n        words and { text.length }\r\n        Characters </p>\r\n         <p > { 0.008 * text.split(\" \").length }\r\n        Minutes read \r\n        </p> \r\n        <h2 > Preview </h2>\r\n         <p> {text.length>0?text:\"Enter text above to preview here\" } </p> \r\n        </div>\r\n\r\n        </>\r\n\r\n    )\r\n}\r\n//update the state using the settext func","import React from 'react';\r\n\r\n\r\nconst Alert = (props) => {\r\n    const capatalize=(word)=>{\r\n        const lower=word.toLowerCase();\r\n        return lower.charAt(0).toUpperCase() +lower.slice(1);\r\n    }\r\n    return (\r\n       props.alert && <div>\r\n     <div className={`alert alert-${props.alert.type}alert-dismissible fade show`} role=\"alert\">\r\n  <strong>{capatalize(props.alert.type)}</strong>:{props.alert.msg}\r\n \r\n</div>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default Alert;\r\n","import \"./App.css\";\n// import About from './components/About';\nimport Navbar from \"./components/Navbar\";\nimport TextForm from \"./components/Textform\";\nimport React, { useState } from \"react\";\nimport Alert from \"./components/Alert\";\n\n// import {\n//   BrowserRouter as Router,\n//   Switch,\n//   Route,\n// } from  \"react-router-dom\" ;\n\nfunction App() {\n  const [mode, setMode] = useState(\"light\");\n  const [alert, setAlert] = useState(null);\n\n  const showAlert = (message, type) => {\n    setAlert({\n      msg: message,\n      type: type,\n    });\n    setTimeout(()=>{\n        setAlert(null)\n    },2000)\n  };\n  const toggleMode = () => {\n    if (mode === \"light\") {\n      setMode(\"dark\");\n      document.body.style.background = \"grey \";\n      showAlert(\"Dark mode has been enabled\",\"success\")\n      document.title=\"TextUtils-Dark Mode\"\n\n      // setInterval(()=>{\n      //   document.title=\"TestUtils is Amazing \"\n      // },2000)\n      // setInterval(()=>{\n      //   document.title=\" Install TestUtils \"\n      // },1500)\n\n    } else {\n      setMode(\"light\");\n      document.body.style.background = \"white\";\n      showAlert(\"Light mode has been enabled\",\"success\")\n      document.title=\"TextUtils-Light Mode\"\n    }\n  };\n  return (\n    <>\n    {/* <Router> */}\n      <Navbar title=\"Textutils\" mode={mode} toggleMode={toggleMode} about=\"about\" />\n      <Alert alert={alert} />\n      <div className=\"container\" my-3>\n        {/* <Switch> */}\n          {/* <Route exact path=\"/about\"> */}\n            {/* <About /> */}\n          {/* </Route> */}\n          {/* <Route exact path=\"/\"> */}\n        <TextForm showAlert={showAlert} heading=\"Enter the text to analyse below\" mode={mode} />\n          {/* </Route> */}\n        {/* </Switch> */}\n        {/* switch from react router site  */}\n        {/* exact: exact matching , prevents partial matching  */}\n      </div>\n    {/* </Router> */}\n    </>\n  );\n}\n\nexport default App;\n","// eslint-disable-next-line\nimport React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\n\n\nReactDOM.render( <\n    App / > ,\n    document.getElementById('root')\n);"],"sourceRoot":""}